<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <android.support.v7.widget.CardView
        style="@style/card_view_style"
        android:foreground="?android:attr/selectableItemBackground"
        app:cardCornerRadius="3dp"
        app:cardUseCompatPadding="true">

        <TextView
            style="@style/normal_text_style"
            android:text="@string/mine_info_dynamic" />
    </android.support.v7.widget.CardView>

    <android.support.v7.widget.CardView
        style="@style/card_view_style"
        android:foreground="?android:attr/selectableItemBackground"
        app:cardCornerRadius="3dp"
        app:cardUseCompatPadding="true">

        <TextView
            style="@style/normal_text_style"
            android:text="@string/mine_info_photos" />
    </android.support.v7.widget.CardView>

    <android.support.v7.widget.CardView
        style="@style/card_view_style"
        android:foreground="?android:attr/selectableItemBackground"
        app:cardCornerRadius="3dp"
        app:cardUseCompatPadding="true">

        <TextView
            style="@style/normal_text_style"
            android:text="@string/mine_info_like" />
    </android.support.v7.widget.CardView>

    <android.support.v7.widget.CardView
        style="@style/card_view_style"
        android:foreground="?android:attr/selectableItemBackground"
        app:cardCornerRadius="3dp"
        app:cardUseCompatPadding="true">

        <TextView
            style="@style/normal_text_style"
            android:text="@string/mine_info_do_latest" />
    </android.support.v7.widget.CardView>

    <android.support.v7.widget.CardView
        style="@style/card_view_style"
        android:foreground="?android:attr/selectableItemBackground"
        app:cardCornerRadius="3dp"
        app:cardUseCompatPadding="true">

        <TextView
            style="@style/normal_text_style"
            android:text="@string/mine_info_more" />
    </android.support.v7.widget.CardView>

    <android.support.v7.widget.CardView
        style="@style/card_view_style"
        android:foreground="?android:attr/selectableItemBackground"
        app:cardCornerRadius="3dp"
        app:cardUseCompatPadding="true">
        <TextView
            style="@style/normal_text_style"
            android:text="在CoordinatorLayout 与浮动操作按钮中我们讨论了一个自定义behavior的例子。注： 译文http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0718/3197.html  。

CoordinatorLayout的工作原理是搜索定义了CoordinatorLayout Behavior 的子view，不管是通过在xml中使用app:layout_behavior标签还是通过在代码中对view类使用@DefaultBehavior修饰符来添加注解。当滚动发生的时候，CoordinatorLayout会尝试触发那些声明了依赖的子view。

要自己定义CoordinatorLayout Behavior，你需要实现layoutDependsOn() 和onDependentViewChanged()两个方法。比如AppBarLayout.Behavior 就定义了这两个关键方法。这个behavior用于当滚动发生的时候让AppBarLayout发生改变。\n
app:layout_scrollFlags属性里面必须至少启用scroll这个flag，这样这个view才会滚动出屏幕，否则它将一直固定在顶部。可以使用的其他flag有：

enterAlways: 一旦向上滚动这个view就可见。
enterAlwaysCollapsed: 顾名思义，这个flag定义的是何时进入（已经消失之后何时再次显示）。假设你定义了一个最小高度（minHeight）同时enterAlways也定义了，那么view将在到达这个最小高度的时候开始显示，并且从这个时候开始慢慢展开，当滚动到顶部的时候展开完。
exitUntilCollapsed: 同样顾名思义，这个flag时定义何时退出，当你定义了一个minHeight，这个view将在滚动到达这个最小高度的时候消失。
记住，要把带有scroll flag的view放在前面，这样收回的view才能让正常退出，而固定的view继续留在顶部。

此时，你应该注意到我们的Toolbar能够响应滚动事件了。" />
    </android.support.v7.widget.CardView>
</LinearLayout>